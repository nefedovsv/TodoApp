{"version":3,"sources":["common/auth/AddUserData/InputUserData.module.css","common/NoMatchPage.tsx","common/auth/PrivateRoute.tsx","common/auth/AddUserData/AddUserData.tsx","common/auth/Authentication.tsx","common/todo/AddTodo.tsx","constants/constants.tsx","common/todo/TodoList.tsx","constants/selectors.tsx","common/todo/Filters.tsx","common/todo/TodoPage/TodoPage.tsx","common/auth/AuthButton/AuthButton.tsx","App.tsx","constants/api.tsx","store/todoModificationStore.tsx","store/authenticationStore.tsx","store/mobxStore.tsx","index.tsx","common/todo/TodoPage/TodoPage.module.css","common/auth/AuthButton/AuthButton.module.css"],"names":["module","exports","NoMatchPage","withRouter","history","status","title","subTitle","extra","type","onClick","push","PrivateRoute","inject","observer","Component","component","authentication","rest","render","props","isAuthenticated","to","pathname","state","from","location","AddUserData","onChange","e","value","currentTarget","onSubmit","preventDefault","logIn","className","styles","root","layout","this","Item","placeholder","prefix","style","color","suffix","htmlType","React","observable","Authentication","AddTodo","addTodo","todoModification","VISIBILITY_FILTERS","visibility","TodoList","handleClick","todo","deliteTodo","_id","handleClickText","toggleTodo","completed","getAllTodo","Text","Typography","filter","arrayTodo","filters","getArrayTodosByVisibilityFilter","dataSource","renderItem","actions","Meta","delete","data","Filters","currentFilter","innerText","setFilter","map","item","index","marginLeft","key","TodoPage","image","AuthButton","strong","margin","logOut","localStorage","clear","createBrowserHistory","api","baseUrl","url","fetch","method","headers","Authorization","getItem","body","JSON","stringify","userName","response","json","id","userData","TodoModification","action","bound","get","runInAction","text","post","concat","delite","resultDelite","error","put","resultToggle","initialStateAuthentication","token","access_token","setItem","store","exact","path","document","getElementById"],"mappings":"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","file":"static/js/main.15579a8d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"InputUserData_root__1kfRv\"};","import React from \"react\";\r\nimport { Result, Button } from \"antd\";\r\nimport { withRouter } from \"react-router-dom\";\r\nexport const NoMatchPage = withRouter(({ history }) => {\r\n  return (\r\n    <Result\r\n      status=\"404\"\r\n      title=\"404\"\r\n      subTitle=\"Ошибка в роутинге!!!\"\r\n      extra={\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={() => {\r\n            history.push(\"/\");\r\n          }}\r\n        >\r\n          На главную\r\n        </Button>\r\n      }\r\n    />\r\n  );\r\n});\r\n","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { inject, observer } from 'mobx-react'\r\nexport const PrivateRoute = inject('authentication')(\r\n  observer(({ component: Component, authentication, ...rest }) => (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        authentication.isAuthenticated ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: '/',\r\n              state: { from: props.location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  ))\r\n)\r\n","import * as React from \"react\";\r\nimport { inject, observer } from \"mobx-react\";\r\nimport { observable } from \"mobx\";\r\nimport { Input, Tooltip, Icon, Button, Form } from \"antd\";\r\nimport styles from \"./InputUserData.module.css\";\r\nimport { IAuthentication } from \"../../../models/IAuthenticationSchema\";\r\ninterface AddUserDataProps {\r\n  authentication?: IAuthentication;\r\n}\r\n@inject(\"authentication\")\r\n@observer\r\nexport class AddUserData extends React.Component<AddUserDataProps> {\r\n  @observable\r\n  value: string = \"\";\r\n  render() {\r\n    return (\r\n      <div className={styles.root}>\r\n        <Form layout=\"inline\" onSubmit={this.onSubmit}>\r\n          <Form.Item>\r\n            <Input\r\n              value={this.value}\r\n              onChange={this.onChange}\r\n              placeholder=\"Enter your nickname\"\r\n              prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n              suffix={\r\n                <Tooltip title=\"It will allow to load the list your TODO\">\r\n                  <Icon\r\n                    type=\"info-circle\"\r\n                    style={{ color: \"rgba(0,0,0,.45)\" }}\r\n                  />\r\n                </Tooltip>\r\n              }\r\n            />\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              LogIn\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n  onChange = (e: React.FormEvent<HTMLInputElement>): void => {\r\n    this.value = e.currentTarget.value;\r\n  };\r\n  onSubmit = (e: React.FormEvent<HTMLFormElement>): void => {\r\n    e.preventDefault();\r\n    const { logIn } = this.props.authentication!;\r\n    logIn(this.value);\r\n    this.value = \"\";\r\n  };\r\n}\r\n","import * as React from \"react\";\r\nimport { Redirect, RouteComponentProps } from \"react-router\";\r\nimport { inject, observer } from \"mobx-react\";\r\nimport { AddUserData } from \"./AddUserData/AddUserData\";\r\nimport { IAuthentication } from \"../../models/IAuthenticationSchema\";\r\ninterface IProps {\r\n  authentication: IAuthentication;\r\n  location: RouteComponentProps[\"location\"];\r\n}\r\n@inject(\"authentication\")\r\n@observer\r\nexport class Authentication extends React.Component<IProps> {\r\n  render() {\r\n    const { isAuthenticated } = this.props.authentication;\r\n    let { from } = this.props.location.state || {\r\n      from: { pathname: \"/profile\" }\r\n    };\r\n    if (isAuthenticated) return <Redirect to={from} />;\r\n    return <AddUserData />;\r\n  }\r\n}\r\n","import * as React from \"react\";\r\nimport { inject, observer } from \"mobx-react\";\r\nimport { observable } from \"mobx\";\r\nimport { Input, Icon, Button, Form } from \"antd\";\r\nimport { ITodoModification } from \"../../models/ITodoModificationSchema\";\r\ninterface AddTodoProps {\r\n  todoModification?: ITodoModification;\r\n}\r\n@inject(\"todoModification\")\r\n@observer\r\nexport class AddTodo extends React.Component<AddTodoProps> {\r\n  @observable\r\n  value: string = \"\";\r\n  render() {\r\n    return (\r\n      <Form layout=\"inline\" onSubmit={this.onSubmit}>\r\n        <Form.Item>\r\n          <Input\r\n            value={this.value}\r\n            onChange={this.onChange}\r\n            placeholder=\"here is yours TODO\"\r\n            prefix={\r\n              <Icon type=\"message\" style={{ color: \"rgba(0,0,0,.25)\" }} />\r\n            }\r\n          />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Add TODO\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n  onChange = (e: React.FormEvent<HTMLInputElement>): void => {\r\n    this.value = e.currentTarget.value;\r\n  };\r\n  onSubmit = (e: React.FormEvent<HTMLFormElement>): void => {\r\n    e.preventDefault();\r\n    const { addTodo } = this.props.todoModification!;\r\n    addTodo(this.value);\r\n    this.value = \"\";\r\n  };\r\n}\r\n","export const API = \"http://localhost:3000/api/users/\";\r\nexport const ADD_TODO = \"ADD_TODO\";\r\nexport const FAIL_TODO = \"FAIL_TODO\";\r\nexport const GET_ALL_TODO = \"GET_ALL_TODO\";\r\nexport const DELITE_TODO = \"DELITE_TODO\";\r\nexport const TOGGLE_TODO = \"TOGGLE_TODO\";\r\nexport const SET_FILTER = \"SET_FILTER\";\r\nexport const LOGIN_ACTION = \"LOGIN_ACTION\";\r\nexport const LOGOUT_ACTION = \"LOGOUT_ACTION\";\r\nexport const VISIBILITY_FILTERS = {\r\n  ALL: \"view all todos\",\r\n  COMPLETED: \"completed\",\r\n  INCOMPLETE: \"incomplete\"\r\n};\r\nexport const visibility = [\r\n  VISIBILITY_FILTERS.ALL,\r\n  VISIBILITY_FILTERS.COMPLETED,\r\n  VISIBILITY_FILTERS.INCOMPLETE\r\n];\r\n","import * as React from \"react\";\r\nimport { inject, observer } from \"mobx-react\";\r\nimport { List, Button, Typography } from \"antd\";\r\nimport { getArrayTodosByVisibilityFilter } from \"../../constants/selectors\";\r\nimport { ITodoModification } from \"../../models/ITodoModificationSchema\";\r\nimport { ITodo } from \"../../models/ITodoSchema\";\r\ninterface TodoListProps {\r\n  todoModification?: ITodoModification;\r\n}\r\n@inject(\"todoModification\")\r\n@observer\r\nexport class TodoList extends React.Component<TodoListProps> {\r\n  componentDidMount() {\r\n    const { getAllTodo } = this.props.todoModification!;\r\n    getAllTodo();\r\n  }\r\n  handleClick = (todo: any) => () => {\r\n    //разобраться почему any\r\n    const { deliteTodo } = this.props.todoModification!;\r\n    deliteTodo(todo._id);\r\n  };\r\n  handleClickText = (todo: any) => () => {\r\n    //разобраться почему any\r\n    const { toggleTodo } = this.props.todoModification!;\r\n    toggleTodo(todo._id, todo.completed);\r\n  };\r\n  render() {\r\n    const { Text } = Typography;\r\n    const { filter } = this.props.todoModification!;\r\n    const { todo } = this.props.todoModification!;\r\n    const arrayTodo: ITodo[] = getArrayTodosByVisibilityFilter(todo, filter);\r\n    return (\r\n      <List\r\n        dataSource={arrayTodo}\r\n        renderItem={todo => (\r\n          <List.Item\r\n            actions={[\r\n              <Button type=\"primary\" onClick={this.handleClickText(todo)}>\r\n                Сделано\r\n              </Button>,\r\n              <Button type=\"primary\" onClick={this.handleClick(todo)}>\r\n                Удалить\r\n              </Button>\r\n            ]}\r\n          >\r\n            <List.Item.Meta\r\n              title={\r\n                <span onClick={this.handleClickText(todo)}>\r\n                  {todo && todo.completed ? (\r\n                    <Text delete> {todo.data} </Text>\r\n                  ) : (\r\n                    <Text> {todo.data} </Text>\r\n                  )}\r\n                </span>\r\n              }\r\n            />\r\n          </List.Item>\r\n        )}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import * as filters from './constants'\r\nimport { ITodo } from '../models/ITodoSchema'\r\nexport const getArrayTodosByVisibilityFilter = (\r\n  todo: ITodo[],\r\n  filter: string\r\n) => {\r\n  switch (filter) {\r\n    case filters.VISIBILITY_FILTERS.COMPLETED:\r\n      return todo.filter(todo => todo.completed)\r\n    case filters.VISIBILITY_FILTERS.INCOMPLETE:\r\n      return todo.filter(todo => !todo.completed)\r\n    case filters.VISIBILITY_FILTERS.ALL:\r\n    default:\r\n      return todo\r\n  }\r\n}\r\n","import * as React from \"react\";\r\nimport * as filters from \"../../constants/constants\";\r\nimport { Button } from \"antd\";\r\nimport { inject, observer } from \"mobx-react\";\r\nimport { ITodoModification } from \"../../models/ITodoModificationSchema\";\r\ninterface FiltersProps {\r\n  todoModification?: ITodoModification;\r\n}\r\n@inject(\"todoModification\")\r\n@observer\r\nexport class Filters extends React.Component<FiltersProps> {\r\n  render() {\r\n    return filters.visibility.map((item, index) => {\r\n      return (\r\n        <div style={{ marginLeft: \"10px\" }} key={index}>\r\n          <Button type=\"primary\" onClick={this.onClick}>\r\n            {item}\r\n          </Button>\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n  onClick = (e: React.MouseEvent<HTMLElement, MouseEvent>): void => {\r\n    let currentFilter = e.currentTarget.innerText;\r\n    const { setFilter } = this.props.todoModification!;\r\n    setFilter(currentFilter);\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport { AddTodo } from \"../AddTodo\";\r\nimport { TodoList } from \"../TodoList\";\r\nimport { Filters } from \"../Filters\";\r\nimport styles from \"./TodoPage.module.css\";\r\nexport const TodoPage = () => {\r\n  return (\r\n    <div className={styles.image}>\r\n      <div className={styles.root}>\r\n        <AddTodo />\r\n        <TodoList />\r\n        <div className={styles.filters}>\r\n          <Filters />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import * as React from \"react\";\r\nimport { withRouter, RouteComponentProps } from \"react-router-dom\";\r\nimport { inject, observer } from \"mobx-react\";\r\nimport { Typography, Button } from \"antd\";\r\nimport styles from \"./AuthButton.module.css\";\r\n\r\ntype PropsType = RouteComponentProps & {\r\n  authentication?: any;\r\n};\r\n@inject(\"authentication\")\r\n@observer\r\nclass AuthButton extends React.Component<PropsType> {\r\n  render() {\r\n    const { Text } = Typography;\r\n    const { authentication } = this.props;\r\n    const { history } = this.props;\r\n    return authentication.isAuthenticated ? (\r\n      <Text strong className={styles.root}>\r\n        <span className={styles.margin}>Welcome!</span>\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={() => {\r\n            authentication.logOut();\r\n            history.push(\"/\");\r\n            localStorage.clear();\r\n          }}\r\n        >\r\n          LogOut\r\n        </Button>\r\n      </Text>\r\n    ) : (\r\n      <Text strong className={styles.root}>\r\n        You aren't authorised!\r\n      </Text>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(AuthButton);\r\n","import React from \"react\";\r\nimport { Router, Route } from \"react-router\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport { Switch } from \"react-router-dom\";\r\nimport { NoMatchPage } from \"./common/NoMatchPage\";\r\nimport { PrivateRoute } from \"./common/auth/PrivateRoute\";\r\nimport { Authentication } from \"./common/auth/Authentication\";\r\nimport { TodoPage } from \"./common/todo/TodoPage/TodoPage\";\r\nimport AuthButton from \"./common/auth/AuthButton/AuthButton\";\r\nconst history = createBrowserHistory();\r\nexport function App() {\r\n  return (\r\n    <Router history={history}>\r\n      <div>\r\n        <AuthButton />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Authentication} />\r\n          <PrivateRoute path=\"/profile\" component={TodoPage} />\r\n          <Route component={NoMatchPage} />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n","class Api {\r\n  baseUrl: string;\r\n  constructor(baseUrl: string) {\r\n    this.baseUrl = baseUrl;\r\n  }\r\n  async post(url: string, data: string) {\r\n    const response = await fetch(this.baseUrl + url, {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`\r\n      },\r\n      body: JSON.stringify({\r\n        data: data,\r\n        completed: false,\r\n        userName: localStorage.getItem(\"userData\")\r\n      })\r\n    });\r\n    return response.json();\r\n  }\r\n  async delite(url: string, id: string) {\r\n    await fetch(this.baseUrl + url + `${id}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`\r\n      },\r\n      body: JSON.stringify({\r\n        userName: localStorage.getItem(\"userData\")\r\n      })\r\n    });\r\n  }\r\n  async get(url: string) {\r\n    const response = await fetch(this.baseUrl + url, {\r\n      headers: {\r\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        userData: `${localStorage.getItem(\"userData\")}`\r\n      }\r\n    });\r\n    return response.json();\r\n  }\r\n  async put(url: string, id: string, completed: boolean) {\r\n    await fetch(this.baseUrl + url, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`\r\n      },\r\n      body: JSON.stringify({\r\n        id: id,\r\n        completed: !completed\r\n      })\r\n    });\r\n  }\r\n}\r\nexport const api = new Api(\"http://localhost:3001/api/\");\r\n","import * as filters from \"../constants/constants\";\r\nimport { api } from \"../constants/api\";\r\nimport { observable, action, runInAction } from \"mobx\";\r\nimport { ITodo } from \"../models/ITodoSchema\";\r\nimport { ITodoModification } from \"../models/ITodoModificationSchema\";\r\n\r\nexport class TodoModification implements ITodoModification {\r\n  @observable todo: ITodo[] = [];\r\n  @observable filter: string = filters.VISIBILITY_FILTERS.ALL;\r\n  @action.bound\r\n  setFilter(filter: string): void {\r\n    this.filter = filter;\r\n  }\r\n  @action.bound\r\n  async getAllTodo(): Promise<void> {\r\n    try {\r\n      const data: ITodo[] = await api.get(\"users/\");\r\n      runInAction(() => {\r\n        this.todo = data;\r\n      });\r\n    } catch (error) {\r\n      runInAction(() => {\r\n        this.todo = [];\r\n      });\r\n    }\r\n  }\r\n  @action.bound\r\n  async addTodo(text: string): Promise<void> {\r\n    try {\r\n      const data: ITodo[] = await api.post(\"users/\", text);\r\n      this.todo = this.todo.concat(data);\r\n    } catch (error) {\r\n      this.todo = [];\r\n    }\r\n  }\r\n  @action.bound\r\n  async deliteTodo(id: string): Promise<void> {\r\n    try {\r\n      api.delite(\"users/\", id);\r\n      const resultDelite: ITodo[] = this.todo.filter(item => item._id !== id);\r\n      this.todo = resultDelite;\r\n    } catch (error) {\r\n      this.todo = [];\r\n    }\r\n  }\r\n  @action.bound\r\n  async toggleTodo(id: string, completed: boolean): Promise<void> {\r\n    try {\r\n      api.put(\"users/\", id, completed);\r\n      const resultToggle: ITodo[] = this.todo.map(item =>\r\n        item._id === id ? { ...item, completed: !completed } : item\r\n      );\r\n      this.todo = resultToggle;\r\n    } catch (error) {\r\n      this.todo = [];\r\n    }\r\n  }\r\n}\r\n","import { api } from \"../constants/api\";\r\nimport { observable, action, runInAction } from \"mobx\";\r\nimport { IAuthentication } from \"../models/IAuthenticationSchema\";\r\nlet initialStateAuthentication: boolean = false;\r\nconst token = localStorage.getItem(\"token\");\r\ntoken\r\n  ? (initialStateAuthentication = true)\r\n  : (initialStateAuthentication = false);\r\nexport class Authentication implements IAuthentication {\r\n  @observable isAuthenticated = initialStateAuthentication;\r\n  @action.bound\r\n  async logIn(data: string): Promise<void> {\r\n    try {\r\n      const { access_token } = await api.post(\"token\", data);\r\n      localStorage.setItem(\"token\", access_token);\r\n      localStorage.setItem(\"userData\", data);\r\n      runInAction(() => {\r\n        this.isAuthenticated = true;\r\n      });\r\n    } catch (error) {\r\n      runInAction(() => {\r\n        this.isAuthenticated = false;\r\n      });\r\n    }\r\n  }\r\n  @action.bound\r\n  logOut(): void {\r\n    this.isAuthenticated = false;\r\n  }\r\n}\r\n","import { TodoModification } from \"./todoModificationStore\";\r\nimport { Authentication } from \"./authenticationStore\";\r\nexport const store = {\r\n  todoModification: new TodoModification(),\r\n  authentication: new Authentication()\r\n};\r\n","import React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport { Provider } from \"mobx-react\";\r\nimport { App } from \"./App\";\r\nimport \"./Antd.css\";\r\nimport { store } from \"./store/mobxStore\";\r\nrender(\r\n  <Provider {...store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TodoPage_root__1ZOlY\",\"image\":\"TodoPage_image__1_wXX\",\"filters\":\"TodoPage_filters__2ksvV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"AuthButton_root__16hhh\",\"margin\":\"AuthButton_margin__2gQrR\"};"],"sourceRoot":""}